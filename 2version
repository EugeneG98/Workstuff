import pandas as pd
import os
import warnings

# Скрываем предупреждения
warnings.filterwarnings("ignore", category=UserWarning)

# Путь к папке с вашими Excel файлами
folder_path = r'C:\Users\e.gorin\Desktop\Test\Tests\Январь'  # Замените на ваш путь
# Ячейки, которые вы хотите извлечь
type_cells = ['E5', 'E6', 'E7']  # Ячейки для "Тип обращения"
postanovshik_cell = 'D31'  # Ячейка для "Постановщик"
alternative_cell = 'E31'  # Ячейка для альтернативного значения
# Список для хранения значений
data = []

# Проходим по всем файлам в указанной папке
for file_index, filename in enumerate(os.listdir(folder_path), start=1):
    if filename.endswith('.xlsx') and not filename.startswith('~$'):  # Игнорируем временные файлы
        file_path = os.path.join(folder_path, filename)
        try:
            # Читаем файл
            df = pd.read_excel(file_path, header=None)

            # Извлекаем значение для "Постановщик"
            column_letter = postanovshik_cell[0]
            row_number = int(postanovshik_cell[1:]) - 1  # Преобразуем строку в индекс (0-индексация)
            column_index = ord(column_letter.upper()) - ord('A')
            
            # Попробуем извлечь значение из D31
            try:
                postanovshik_value = df.iat[row_number, column_index]  # Получаем значение из D31
                if pd.notna(postanovshik_value):
                    postanovshik_value = str(postanovshik_value).strip()
                else:
                    postanovshik_value = "пусто"
            except Exception as e:
                postanovshik_value = "пусто"  # Если ошибка, назначаем значение по умолчанию

            # Если значение в D31 пустое, берем значение из E31
            if not postanovshik_value or postanovshik_value == "пусто":
                alternative_column_letter = alternative_cell[0]
                alternative_row_number = int(alternative_cell[1:]) - 1
                alternative_column_index = ord(alternative_column_letter.upper()) - ord('A')
                
                # Попробуем извлечь значение из E31
                try:
                    postanovshik_value = df.iat[alternative_row_number, alternative_column_index]  # Получаем значение из E31
                    if pd.notna(postanovshik_value):
                        postanovshik_value = str(postanovshik_value).strip()
                    else:
                        postanovshik_value = "пусто"
                except Exception as e:
                    postanovshik_value = "пусто"  # Если ошибка, назначаем значение по умолчанию

            # Проверяем значения для "Тип обращения"
            type_values = []
            for cell in type_cells:
                column_letter = cell[0]
                row_number = int(cell[1:]) - 1  # Преобразуем строку в индекс (0-индексация)
                column_index = ord(column_letter.upper()) - ord('A')
                type_value = df.iat[row_number, column_index]  # Получаем значение из E5, E6 или E7
                type_values.append(type_value)

            # Если все значения для "Тип обращения" пустые, ставим "пусто"
            if all(pd.isna(value) for value in type_values):
                type_value_to_add = "пусто"
            else:
                type_value_to_add = None  # По умолчанию None, если есть значения

            # Добавляем данные в список
            data.append([type_value_to_add, postanovshik_value, file_index])

        except Exception as e:
            # Если возникла ошибка, выводим в консоль
            print(f"Ошибка при обработке файла {filename}: {e}")

# Создаем DataFrame для сводной таблицы, если есть данные
df_result = pd.DataFrame(data, columns=['Тип обращения', 'Постановщик', 'Номер файла'])

# Выводим результат в консоль
print("Сводная таблица:")
print(df_result)
